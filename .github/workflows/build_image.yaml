name: Build and Push Multi-Arch Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual triggering of the workflow

env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64,amd64'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate version number
        id: version
        run: |
          YEAR_MONTH=$(date +'%Y.%m')
          EXISTING_TAGS=$(git tag -l "${YEAR_MONTH}.*" | wc -l)
          COUNTER=$((EXISTING_TAGS + 1))
          VERSION="${YEAR_MONTH}.${COUNTER}"
          echo "Generated version: $VERSION"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          
          if [[ "${{ github.event_name }}" != "pull_request" ]]; then
            git tag $VERSION
            git push origin $VERSION || echo "Failed to push tag, continuing workflow"
          fi

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ steps.version.outputs.version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create Release
        if: github.event_name != 'pull_request'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}
